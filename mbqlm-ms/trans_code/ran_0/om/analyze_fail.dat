# [No.1] construct_wrapper.1
# In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(622)/    def construct(self, logits, labels):/
funcgraph fg_1(
        %para1 : Tensor(F32)[1, 6]    # logits
        , %para2 : Tensor(F32)[6]    # labels
    ) {

#------------------------> 0
    %1 = FuncGraph::fg_2(%para1, %para2)    #(Tensor(F32)[1, 6], Tensor(F32)[6])    # fg_2=construct.2 #scope: Default
#[CNode]5
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]6
}
# order:
#   1: construct_wrapper.1:[CNode]5{[0]: ValueNode<FuncGraph> construct.2, [1]: logits, [2]: labels}
#   2: construct_wrapper.1:[CNode]6{[0]: ValueNode<Primitive> Return, [1]: [CNode]5}


# [No.2] construct.2
# In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(622)/    def construct(self, logits, labels):/
funcgraph fg_2(
        %para3 : Tensor(F32)[1, 6]    # Φlogits
        , %para4 : Tensor(F32)[6]    # labels
    ) {
    %1 : NoneType = DoSignaturePrimitive::S-Prim-_check_is_tensor{prim_type=1}("logits", %para3, "SoftmaxCrossEntropyWithLogits")    #(String, Tensor(F32)[1, 6], String) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(623)/        _check_is_tensor('logits', logits, self.cls_name)/#[CNode]7
    %2 : NoneType = DoSignaturePrimitive::S-Prim-_check_is_tensor{prim_type=1}("labels", %para4, "SoftmaxCrossEntropyWithLogits")    #(String, Tensor(F32)[6], String) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(624)/        _check_is_tensor('labels', labels, self.cls_name)/#[CNode]8
    %3 : Tuple[NoneType*2] = Primitive::MakeTuple{prim_type=1}(%1, %2)    #(NoneType, NoneType) #scope: Default
#[CNode]9
    %4 : Tuple[NoneType*2] = Primitive::stop_gradient{prim_type=1}(%3)    #(Tuple[NoneType*2]) #scope: Default
#[CNode]10
    %5 : Bool = FuncGraph::fg_11(Bool(0))    #(Bool)    # fg_11=bool_.11 #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]12
    %6 : Func = Primitive::Switch{prim_type=1}(%5, FuncGraph::fg_13, FuncGraph::fg_3)    #(Bool, Func, Func)    # fg_13=✓construct.13, fg_3=✗construct.3 #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]14

#------------------------> 1
    %7 = %6() #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]15
    %8 = Primitive::Depend{prim_type=1}[side_effect_propagate=I64(1)](%7, %4)    #(Undefined, Tuple[NoneType*2]) #scope: Default
#[CNode]16
    Primitive::Return{prim_type=1}(%8)    #(Undefined) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]17
}
# order:
#   1: construct.2:[CNode]7{[0]: ValueNode<DoSignaturePrimitive> S-Prim-_check_is_tensor, [1]: ValueNode<StringImm> logits, [2]: Φlogits, [3]: ValueNode<StringImm> SoftmaxCrossEntropyWithLogits}
#   2: construct.2:[CNode]8{[0]: ValueNode<DoSignaturePrimitive> S-Prim-_check_is_tensor, [1]: ValueNode<StringImm> labels, [2]: labels, [3]: ValueNode<StringImm> SoftmaxCrossEntropyWithLogits}
#   3: construct.2:[CNode]12{[0]: ValueNode<FuncGraph> bool_.11, [1]: ValueNode<BoolImm> false}
#   4: construct.2:[CNode]14{[0]: ValueNode<Primitive> Switch, [1]: [CNode]12, [2]: ValueNode<FuncGraph> ✓construct.13, [3]: ValueNode<FuncGraph> ✗construct.3}
#   5: construct.2:[CNode]15{[0]: [CNode]14}
#   6: construct.2:[CNode]17{[0]: ValueNode<Primitive> Return, [1]: [CNode]16}


# [No.3] ✗construct.3
# In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/
funcgraph fg_3[fg_2](
) {

#------------------------> 2
    %1 = FuncGraph::fg_4(%para4)    #(Tensor(F32)[6])    # fg_4=↓construct.4 #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]18
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/#[CNode]19
}
# order:
#   1: ✗construct.3:[CNode]18{[0]: ValueNode<FuncGraph> ↓construct.4, [1]: labels}
#   2: ✗construct.3:[CNode]19{[0]: ValueNode<Primitive> Return, [1]: [CNode]18}


# [No.4] ↓construct.4
# In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(625)/        if self.sparse:/
funcgraph fg_4[fg_2](
        %para5 : Tensor(F32)[6]    # Φlabels
    ) {

#------------------------> 3
    %1 = DoSignaturePrimitive::S-Prim-SoftmaxCrossEntropyWithLogits{prim_type=1}(%para3, %para5)    #(Tensor(F32)[1, 6], Tensor(F32)[6]) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(630)/        x = self.softmax_cross_entropy(logits, labels)[0]/#[CNode]20
    %2 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, I64(0))    #(Undefined, Undefined) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(630)/        x = self.softmax_cross_entropy(logits, labels)[0]/#x
    %3 = FuncGraph::fg_21(%2)    #(Undefined)    # fg_21=get_loss.21 #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(631)/        return self.get_loss(x)/#[CNode]22
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default
      # In file /sdb/nlp21/anaconda3/envs/mindspore/lib/python3.7/site-packages/mindspore/nn/loss/loss.py(631)/        return self.get_loss(x)/#[CNode]23
}
# order:
#   1: ↓construct.4:[CNode]20{[0]: ValueNode<DoSignaturePrimitive> S-Prim-SoftmaxCrossEntropyWithLogits, [1]: Φlogits, [2]: Φlabels}
#   2: ↓construct.4:x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]20, [2]: ValueNode<Int64Imm> 0}
#   3: ↓construct.4:[CNode]22{[0]: ValueNode<FuncGraph> get_loss.21, [1]: x}
#   4: ↓construct.4:[CNode]23{[0]: ValueNode<Primitive> Return, [1]: [CNode]22}


#===============================================================================
# num of function graphs in stack: 4/5 (Ignored 1 internal frames).
